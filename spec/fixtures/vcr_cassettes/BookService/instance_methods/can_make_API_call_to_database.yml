---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/books/v1/volumes?key&langRestrict=en&q=intitle:Harry%20Potter%20and%20the%20Goblet%20of%20Fire%2Binauthor:J.K.%20Rowling
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sun, 18 Apr 2021 00:57:07 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJraW5kIjogImJvb2tzI3ZvbHVtZXMiLAogICJ0b3RhbEl0ZW1zIjogMzUsCiAgIml0ZW1zIjogWwogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiN1o2WFliUzFZRmNDIiwKICAgICAgImV0YWciOiAiNU55aFFlUmhBb1UiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy83WjZYWWJTMVlGY0MiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiSGFycnkgUG90dGVyIGFuZCB0aGUgR29ibGV0IG9mIEZpcmUiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkouIEsuIFJvd2xpbmciCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlNjaG9sYXN0aWMiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDAiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgZm91cnRoIHRpdGxlIGluIHRoZSBjb250aW51aW5nIHNhZ2EgaW5jbHVkZXMgSGFycnkncyBsYXRlc3QgYWR2ZW50dXJlIGF0IEhvZ3dhcnRzIFNjaG9vbCBvZiBXaXRjaGNyYWZ0IGFuZCBXaXphcmRyeS4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDQzOTEzOTU5NyIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgwNDM5MTM5NTk1IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDczNCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkp1dmVuaWxlIEZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDQuNSwKICAgICAgICAicmF0aW5nc0NvdW50IjogMTMyOSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC40LjEuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTdaNlhZYlMxWUZjQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9N1o2WFliUzFZRmNDJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9N1o2WFliUzFZRmNDJmRxPWludGl0bGU6SGFycnkrUG90dGVyK2FuZCt0aGUrR29ibGV0K29mK0ZpcmUlMkJpbmF1dGhvcjpKLksuK1Jvd2xpbmcmaGw9JmNkPTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD03WjZYWWJTMVlGY0MmZHE9aW50aXRsZTpIYXJyeStQb3R0ZXIrYW5kK3RoZStHb2JsZXQrb2YrRmlyZSUyQmluYXV0aG9yOkouSy4rUm93bGluZyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9IYXJyeV9Qb3R0ZXJfYW5kX3RoZV9Hb2JsZXRfb2ZfRmlyZS5odG1sP2hsPSZpZD03WjZYWWJTMVlGY0MiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPTdaNlhZYlMxWUZjQyZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiVGhlIGZvdXJ0aCB0aXRsZSBpbiB0aGUgY29udGludWluZyBzYWdhIGluY2x1ZGVzIEhhcnJ5JiMzOTtzIGxhdGVzdCBhZHZlbnR1cmUgYXQgSG9nd2FydHMgU2Nob29sIG9mIFdpdGNoY3JhZnQgYW5kIFdpemFyZHJ5LiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIi0zclhuQUVBQ0FBSiIsCiAgICAgICJldGFnIjogIm15UXJ4M3IyUHlBIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvLTNyWG5BRUFDQUFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkhhcnJ5IFBvdHRlciBhbmQgdGhlIEdvYmxldCBvZiBGaXJlIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJJbmMuIFNjaG9sYXN0aWMiLAogICAgICAgICAgIkouIEsuIFJvd2xpbmciCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlR1cnRsZWJhY2sgQm9va3MiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTMtMDgtMjciLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJTZXF1ZWwgdG86IEhhcnJ5IFBvdHRlciBhbmQgdGhlIHByaXNvbmVyIG9mIEF6a2FiYW4uIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA2MDYzMjM0ODEiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDYwNjMyMzQ4MiIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA3NjgsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJKdXZlbmlsZSBGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LjUsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDEyNiwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAicHJldmlldy0xLjAuMCIsCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0tM3JYbkFFQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPS0zclhuQUVBQ0FBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPS0zclhuQUVBQ0FBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZjZD0yJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9LTNyWG5BRUFDQUFKJmRxPWludGl0bGU6SGFycnkrUG90dGVyK2FuZCt0aGUrR29ibGV0K29mK0ZpcmUlMkJpbmF1dGhvcjpKLksuK1Jvd2xpbmcmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvSGFycnlfUG90dGVyX2FuZF90aGVfR29ibGV0X29mX0ZpcmUuaHRtbD9obD0maWQ9LTNyWG5BRUFDQUFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJOT19QQUdFUyIsCiAgICAgICAgImVtYmVkZGFibGUiOiBmYWxzZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD0tM3JYbkFFQUNBQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIlNlcXVlbCB0bzogSGFycnkgUG90dGVyIGFuZCB0aGUgcHJpc29uZXIgb2YgQXprYWJhbi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJFTFVUeVFFQUNBQUoiLAogICAgICAiZXRhZyI6ICJuUjdqMllWQUpkYyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL0VMVVR5UUVBQ0FBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJIYXJyeSBQb3R0ZXIgYW5kIHRoZSBHb2JsZXQgb2YgRmlyZSAtIFNseXRoZXJpbiBFZGl0aW9uIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJKLiBLLiBSb3dsaW5nIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJCbG9vbXNidXJ5IiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDIwLTAxLTIzIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiTGV0IHRoZSBtYWdpYyBvZiBKLksuIFJvd2xpbmcncyBjbGFzc2ljIEhhcnJ5IFBvdHRlciBzZXJpZXMgdGFrZSB5b3UgYmFjayB0byBIb2d3YXJ0cyBTY2hvb2wgb2YgV2l0Y2hjcmFmdCBhbmQgV2l6YXJkcnkuIFRoaXMgU2x5dGhlcmluIEhvdXNlIEVkaXRpb24gb2ZIYXJyeSBQb3R0ZXIgYW5kIHRoZSBHb2JsZXQgb2YgRmlyZSBjZWxlYnJhdGVzIHRoZSBub2JsZSBjaGFyYWN0ZXIgb2YgdGhlIEhvZ3dhcnRzIGhvdXNlIGZhbWVkIGZvciBpdHMgcHJpZGUsIGFtYml0aW9uIGFuZCBjdW5uaW5nLiBIYXJyeSdzIGZvdXJ0aCB5ZWFyIGF0IEhvZ3dhcnRzIGlzIHBhY2tlZCB3aXRoIG1vcmUgZ3JlYXQgU2x5dGhlcmluIG1vbWVudHMgYW5kIGNoYXJhY3RlcnMsIGN1bG1pbmF0aW5nIGluIHRoZSB0ZXJyaWZ5aW5nIGZpbmFsZSBvZiB0aGUgVHJpd2l6YXJkIFRvdXJuYW1lbnQsIHdoaWNoIHNlZXMgdGhlIG1vbWVudG91cyByZXR1cm4gb2YgVm9sZGVtb3J0LCB0aGUgZ3JlYXRlc3QgRGFyayBXaXphcmQgb2YgYWxsIHRpbWUgLi4uIEVhY2ggU2x5dGhlcmluIEhvdXNlIEVkaXRpb24gZmVhdHVyZXMgdmlicmFudCBzcHJheWVkIGVkZ2VzIGFuZCBpbnRyaWNhdGUgc2lsdmVyIGZvaWxpbmcuIFRoZSBHb2JsZXQgb2YgRmlyZSBibGF6ZXMgYXQgdGhlIHZlcnkgY2VudHJlIG9mIHRoZSBmcm9udCBjb3ZlciwgZnJhbWVkIGJ5IHN0dW5uaW5nIGljb25vZ3JhcGh5IHRoYXQgZHJhd3Mgb24gdGhlbWVzIGFuZCBtb21lbnRzIGZyb20gSi5LLiBSb3dsaW5nJ3MgbXVjaC1sb3ZlZCBzdG9yeS4gSW4gYWRkaXRpb24gdG8gYSBiZXNwb2tlIGludHJvZHVjdGlvbiBhbmQgZXhjbHVzaXZlIGluc2lnaHRzIGludG8gdGhlIG1hZ2ljYWwgcGFpbnRpbmdzIG9mIEhvZ3dhcnRzLCB0aGUgYm9vayBhbHNvIGJvYXN0cyBuZXcgaWxsdXN0cmF0aW9ucyBieSBLYXRlIEdyZWVuYXdheSB3aW5uZXIgTGV2aSBQaW5mb2xkLCBpbmNsdWRpbmcgYSBzcGVjdGFjdWxhciBwb3J0cmFpdCBvZiBMb3JkIFZvbGRlbW9ydCBoaW1zZWxmLiBBbGwgc2V2ZW4gYm9va3MgaW4gdGhlIHNlcmllcyB3aWxsIGJlIGlzc3VlZCBpbiB0aGVzZSBoaWdobHkgY29sbGVjdGFibGUsIGJlYXV0aWZ1bGx5IGNyYWZ0ZWQgSG91c2UgRWRpdGlvbnMsIGRlc2lnbmVkIHRvIGJlIHRyZWFzdXJlZCBhbmQgcmVhZCBmb3IgeWVhcnMgdG8gY29tZS4gQSBtdXN0LWhhdmUgZm9yIGFueW9uZSB3aG8gaGFzIGV2ZXIgaW1hZ2luZWQgc2l0dGluZyB1bmRlciB0aGUgU29ydGluZyBIYXQgaW4gdGhlIEdyZWF0IEhhbGwgYXQgSG9nd2FydHMgd2FpdGluZyB0byBoZWFyIHRoZSB3b3JkcywgJ0JldHRlciBiZSBTTFlUSEVSSU4hJyIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxNTI2NjEwMzM3IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODE1MjY2MTAzMzEiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogNjI3LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiQ2hpbGRyZW4ncyBzdG9yaWVzIgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogInByZXZpZXctMS4wLjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPUVMVVR5UUVBQ0FBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9RUxVVHlRRUFDQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9RUxVVHlRRUFDQUFKJmRxPWludGl0bGU6SGFycnkrUG90dGVyK2FuZCt0aGUrR29ibGV0K29mK0ZpcmUlMkJpbmF1dGhvcjpKLksuK1Jvd2xpbmcmaGw9JmNkPTMmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1FTFVUeVFFQUNBQUomZHE9aW50aXRsZTpIYXJyeStQb3R0ZXIrYW5kK3RoZStHb2JsZXQrb2YrRmlyZSUyQmluYXV0aG9yOkouSy4rUm93bGluZyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9IYXJyeV9Qb3R0ZXJfYW5kX3RoZV9Hb2JsZXRfb2ZfRmlyZV9TbHl0Lmh0bWw/aGw9JmlkPUVMVVR5UUVBQ0FBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiTk9fUEFHRVMiLAogICAgICAgICJlbWJlZGRhYmxlIjogZmFsc2UsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9RUxVVHlRRUFDQUFKJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJOT05FIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJUaGlzIFNseXRoZXJpbiBIb3VzZSBFZGl0aW9uIG9mIEhhcnJ5IFBvdHRlciBhbmQgdGhlIEdvYmxldCBvZiBGaXJlIGNlbGVicmF0ZXMgdGhlIG5vYmxlIGNoYXJhY3RlciBvZiB0aGUgSG9nd2FydHMgaG91c2UgZmFtZWQgZm9yIGl0cyBwcmlkZSwgYW1iaXRpb24gYW5kIGN1bm5pbmcuIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiMUFENXlBRUFDQUFKIiwKICAgICAgImV0YWciOiAiYmo1WHhrUWttWTgiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy8xQUQ1eUFFQUNBQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiSGFycnkgUG90dGVyIGFuZCB0aGUgR29ibGV0IG9mIEZpcmUgLSBIdWZmbGVwdWZmIEVkaXRpb24iLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkouIEsuIFJvd2xpbmciCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIkJsb29tc2J1cnkiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMjAtMDEtMjMiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJMZXQgdGhlIG1hZ2ljIG9mIEouSy4gUm93bGluZydzIGNsYXNzaWMgSGFycnkgUG90dGVyIHNlcmllcyB0YWtlIHlvdSBiYWNrIHRvIEhvZ3dhcnRzIFNjaG9vbCBvZiBXaXRjaGNyYWZ0IGFuZCBXaXphcmRyeS4gVGhpcyBIdWZmbGVwdWZmIEhvdXNlIEVkaXRpb24gb2ZIYXJyeSBQb3R0ZXIgYW5kIHRoZSBHb2JsZXQgb2YgRmlyZSBjZWxlYnJhdGVzIHRoZSBub2JsZSBjaGFyYWN0ZXIgb2YgdGhlIEhvZ3dhcnRzIGhvdXNlIGZhbWVkIGZvciBpdHMgZGVkaWNhdGlvbiwgcGF0aWVuY2UgYW5kIGxveWFsdHkuIEhhcnJ5J3MgZm91cnRoIHllYXIgYXQgSG9nd2FydHMgaXMgcGFja2VkIHdpdGggbW9yZSBncmVhdCBIdWZmbGVwdWZmIG1vbWVudHMgYW5kIGNoYXJhY3RlcnMgLSBub3QgbGVhc3QgdGhlIGhlcm9pc20gYW5kIHZhbG91ciBvZiBIb2d3YXJ0cyBjaGFtcGlvbiBDZWRyaWMgRGlnZ29yeSBpbiB0aGUgdGhyaWxsaW5nIFRyaXdpemFyZCBUb3VybmFtZW50IC4uLiBFYWNoIEh1ZmZsZXB1ZmYgSG91c2UgRWRpdGlvbiBmZWF0dXJlcyB2aWJyYW50IHNwcmF5ZWQgZWRnZXMgYW5kIGludHJpY2F0ZSBzaWx2ZXIgZm9pbGluZy4gVGhlIEdvYmxldCBvZiBGaXJlIGJsYXplcyBhdCB0aGUgdmVyeSBjZW50cmUgb2YgdGhlIGZyb250IGNvdmVyLCBmcmFtZWQgYnkgc3R1bm5pbmcgaWNvbm9ncmFwaHkgdGhhdCBkcmF3cyBvbiB0aGVtZXMgYW5kIG1vbWVudHMgZnJvbSBKLksuIFJvd2xpbmcncyBtdWNoLWxvdmVkIHN0b3J5LiBJbiBhZGRpdGlvbiB0byBhIGJlc3Bva2UgaW50cm9kdWN0aW9uIGFuZCBleGNsdXNpdmUgaW5zaWdodHMgaW50byB0aGUgbWFnaWNhbCBwYWludGluZ3Mgb2YgSG9nd2FydHMsIHRoZSBib29rIGFsc28gYm9hc3RzIG5ldyBpbGx1c3RyYXRpb25zIGJ5IEthdGUgR3JlZW5hd2F5IHdpbm5lciBMZXZpIFBpbmZvbGQsIGluY2x1ZGluZyBhIHNwZWN0YWN1bGFyIHBvcnRyYWl0IG9mIEhvZ3dhcnRzJyBoZWFydHRocm9iLCBDZWRyaWMgRGlnZ29yeS4gQWxsIHNldmVuIGJvb2tzIGluIHRoZSBzZXJpZXMgd2lsbCBiZSBpc3N1ZWQgaW4gdGhlc2UgaGlnaGx5IGNvbGxlY3RhYmxlLCBiZWF1dGlmdWxseSBjcmFmdGVkIEhvdXNlIEVkaXRpb25zLCBkZXNpZ25lZCB0byBiZSB0cmVhc3VyZWQgYW5kIHJlYWQgZm9yIHllYXJzIHRvIGNvbWUuIEEgbXVzdC1oYXZlIGZvciBhbnlvbmUgd2hvIGhhcyBldmVyIGltYWdpbmVkIHNpdHRpbmcgdW5kZXIgdGhlIFNvcnRpbmcgSGF0IGluIHRoZSBHcmVhdCBIYWxsIGF0IEhvZ3dhcnRzIHdhaXRpbmcgdG8gaGVhciB0aGUgd29yZHMsICdCZXR0ZXIgYmUgSFVGRkxFUFVGRiEnIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjE1MjY2MTAyOTkiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTUyNjYxMDI5NCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA2MjcsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJDaGlsZHJlbidzIHN0b3JpZXMiCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAicHJldmlldy0xLjAuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9MUFENXlBRUFDQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0xQUQ1eUFFQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD0xQUQ1eUFFQUNBQUomZHE9aW50aXRsZTpIYXJyeStQb3R0ZXIrYW5kK3RoZStHb2JsZXQrb2YrRmlyZSUyQmluYXV0aG9yOkouSy4rUm93bGluZyZobD0mY2Q9NCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPTFBRDV5QUVBQ0FBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0hhcnJ5X1BvdHRlcl9hbmRfdGhlX0dvYmxldF9vZl9GaXJlX0h1ZmYuaHRtbD9obD0maWQ9MUFENXlBRUFDQUFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJOT19QQUdFUyIsCiAgICAgICAgImVtYmVkZGFibGUiOiBmYWxzZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD0xQUQ1eUFFQUNBQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIlRoaXMgSHVmZmxlcHVmZiBIb3VzZSBFZGl0aW9uIG9mIEhhcnJ5IFBvdHRlciBhbmQgdGhlIEdvYmxldCBvZiBGaXJlIGNlbGVicmF0ZXMgdGhlIG5vYmxlIGNoYXJhY3RlciBvZiB0aGUgSG9nd2FydHMgaG91c2UgZmFtZWQgZm9yIGl0cyBkZWRpY2F0aW9uLCBwYXRpZW5jZSBhbmQgbG95YWx0eS4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICIyRnNReVFFQUNBQUoiLAogICAgICAiZXRhZyI6ICJpODBMdE4wZmFhWSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLzJGc1F5UUVBQ0FBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJIYXJyeSBQb3R0ZXIgYW5kIHRoZSBHb2JsZXQgb2YgRmlyZSAtIEdyeWZmaW5kb3IgRWRpdGlvbiIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiSi4gSy4gUm93bGluZyIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiQmxvb21zYnVyeSIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAyMC0wMS0yMyIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkxldCB0aGUgbWFnaWMgb2YgSi5LLiBSb3dsaW5nJ3MgY2xhc3NpYyBIYXJyeSBQb3R0ZXIgc2VyaWVzIHRha2UgeW91IGJhY2sgdG8gSG9nd2FydHMgU2Nob29sIG9mIFdpdGNoY3JhZnQgYW5kIFdpemFyZHJ5LiBUaGlzIEdyeWZmaW5kb3IgSG91c2UgRWRpdGlvbiBvZkhhcnJ5IFBvdHRlciBhbmQgdGhlIEdvYmxldCBvZiBGaXJlIGNlbGVicmF0ZXMgdGhlIG5vYmxlIGNoYXJhY3RlciBvZiB0aGUgSG9nd2FydHMgaG91c2UgZmFtZWQgZm9yIGl0cyBjb3VyYWdlLCBicmF2ZXJ5IGFuZCBkZXRlcm1pbmF0aW9uLiBIYXJyeSdzIGZvdXJ0aCB5ZWFyIGF0IEhvZ3dhcnRzIGlzIHBhY2tlZCB3aXRoIG1vcmUgZ3JlYXQgR3J5ZmZpbmRvciBtb21lbnRzIGFuZCBjaGFyYWN0ZXJzLCBpbmNsdWRpbmcgSGFycnkncyB1bmV4cGVjdGVkIHNlbGVjdGlvbiBhcyBjaGFtcGlvbiBpbiB0aGUgVHJpd2l6YXJkIFRvdXJuYW1lbnQgLSBub3QgdG8gbWVudGlvbiBIYWdyaWQncyBtaXNhZHZlbnR1cmVzIHdpdGggQmxhc3QtRW5kZWQgU2tyZXd0cyEgRWFjaCBHcnlmZmluZG9yIEhvdXNlIEVkaXRpb24gZmVhdHVyZXMgdmlicmFudCBzcHJheWVkIGVkZ2VzIGFuZCBpbnRyaWNhdGUgZ29sZCBmb2lsaW5nLiBUaGUgR29ibGV0IG9mIEZpcmUgYmxhemVzIGF0IHRoZSB2ZXJ5IGNlbnRyZSBvZiB0aGUgZnJvbnQgY292ZXIsIGZyYW1lZCBieSBzdHVubmluZyBpY29ub2dyYXBoeSB0aGF0IGRyYXdzIG9uIHRoZW1lcyBhbmQgbW9tZW50cyBmcm9tIHRoaXMgbXVjaC1sb3ZlZCBzdG9yeS4gSW4gYWRkaXRpb24gdG8gYSBiZXNwb2tlIGludHJvZHVjdGlvbiBhbmQgZXhjbHVzaXZlIGluc2lnaHRzIGludG8gdGhlIG1hZ2ljYWwgcGFpbnRpbmdzIG9mIEhvZ3dhcnRzLCB0aGUgYm9vayBhbHNvIGJvYXN0cyBuZXcgaWxsdXN0cmF0aW9ucyBieSBLYXRlIEdyZWVuYXdheSB3aW5uZXIgTGV2aSBQaW5mb2xkLCBpbmNsdWRpbmcgYSBzcGVjdGFjdWxhciBwb3J0cmFpdCBvZiBIb2d3YXJ0cycgZ2FtZWtlZXBlciwgUnViZXVzIEhhZ3JpZC5BbGwgc2V2ZW4gYm9va3MgaW4gdGhlIHNlcmllcyB3aWxsIGJlIGlzc3VlZCBpbiB0aGVzZSBoaWdobHkgY29sbGVjdGFibGUsIGJlYXV0aWZ1bGx5IGNyYWZ0ZWQgSG91c2UgRWRpdGlvbnMsIGRlc2lnbmVkIHRvIGJlIHRyZWFzdXJlZCBhbmQgcmVhZCBmb3IgeWVhcnMgdG8gY29tZS4gQSBtdXN0LWhhdmUgZm9yIGFueW9uZSB3aG8gaGFzIGV2ZXIgaW1hZ2luZWQgc2l0dGluZyB1bmRlciB0aGUgU29ydGluZyBIYXQgaW4gdGhlIEdyZWF0IEhhbGwgYXQgSG9nd2FydHMgd2FpdGluZyB0byBoZWFyIHRoZSB3b3JkcywgJ0JldHRlciBiZSBHUllGRklORE9SISciLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTUyNjYxMDI3MiIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxNTI2NjEwMjcwIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDYyNywKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkNoaWxkcmVuJ3Mgc3RvcmllcyIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0yRnNReVFFQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTJGc1F5UUVBQ0FBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPTJGc1F5UUVBQ0FBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZjZD01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MkZzUXlRRUFDQUFKJmRxPWludGl0bGU6SGFycnkrUG90dGVyK2FuZCt0aGUrR29ibGV0K29mK0ZpcmUlMkJpbmF1dGhvcjpKLksuK1Jvd2xpbmcmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvSGFycnlfUG90dGVyX2FuZF90aGVfR29ibGV0X29mX0ZpcmVfR3J5Zi5odG1sP2hsPSZpZD0yRnNReVFFQUNBQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPTJGc1F5UUVBQ0FBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiSGFycnkgUG90dGVyIGpvaW5zIHRoZSBXZWFzbGV5cyBhdCB0aGUgUXVpZGRpdGNoIFdvcmxkIEN1cCwgdGhlbiBlbnRlcnMgaGlzIGZvdXJ0aCB5ZWFyIGF0IEhvZ3dhcnRzIEFjYWRlbXkgd2hlcmUgaGUgaXMgbXlzdGVyaW91c2x5IGVudGVyZWQgaW4gYW4gdW51c3VhbCBjb250ZXN0IHRoYXQgY2hhbGxlbmdlcyBoaXMgd2l6YXJkaW5nIHNraWxscywgZnJpZW5kc2hpcHMgYW5kIGNoYXJhY3RlciwgYW1pZCBzaWducyAuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJZcEI1QmdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJiZ004MnJoWVNkayIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL1lwQjVCZ0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJIYXJyeSBQb3R0ZXIgYW5kIHRoZSBHb2JsZXQgb2YgRmlyZSAoQm9vayA0KSIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiUm93bGluZywgSi5LLiIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiUG90dGVybW9yZSIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAxNS0wMS0xMCIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkluIEhhcnJ5IFBvdHRlciBhbmQgdGhlIEdvYmxldCBvZiBGaXJlLCBIYXJyeSBpcyBtaWR3YXkgdGhyb3VnaCBib3RoIGhpcyB0cmFpbmluZyBhcyBhIHdpemFyZCBhbmQgaGlzIGNvbWluZyBvZiBhZ2UuIEhlIHdhbnRzIHRvIGdldCBhd2F5IGZyb20gdGhlIG1hbGljaW91cyBEdXJzbGV5cyBhbmQgZ28gdG8gdGhlIFF1aWRkaXRjaCBXb3JsZCBDdXAgd2l0aCBIZXJtaW9uZSwgUm9uLCBhbmQgdGhlIFdlYXNsZXlzLiBIZSB3YW50cyB0byBkcmVhbSBhYm91dCBoaXMgY3J1c2gsIENobyBDaGFuZyAoYW5kIG1heWJlIGRvIG1vcmUgdGhhbiBkcmVhbSkuIEFuZCBub3cgdGhhdCBoZeKAmXMgZ290dGVuIHRoZSBoYW5nIG9mIHRoaW5ncyBhdCBIb2d3YXJ0c+KAlGhlIGhvcGVz4oCUaGUganVzdCB3YW50cyB0byBiZSBhIG5vcm1hbCBmb3VydGVlbi15ZWFyLW9sZCB3aXphcmQuIEJ1dCBldmVuIGJ5IGhpcyBzdGFuZGFyZHMsIEhhcnJ5J3MgeWVhciBpcyBhbnl0aGluZyBidXQgbm9ybWFsLiBGaXJzdCBEdW1ibGVkb3JlIGFubm91bmNlcyB0aGUgcmV2aXZhbCBvZiBhIGdyYW5kIGNvbXBldGl0aW9uIHRoYXQgaGFzbid0IHRha2VuIHBsYWNlIGZvciBvbmUgaHVuZHJlZCB5ZWFyczogdGhlIFRyaXdpemFyZCBUb3VybmFtZW50LCB3aGVyZSBhIEhvZ3dhcnRzIGNoYW1waW9uIHdpbGwgY29tcGV0ZSBhZ2FpbnN0IHJpdmFscyBmcm9tIHR3byBvdGhlciBzY2hvb2xzIG9mIG1hZ2ljIGluIHRocmVlIGhpZ2hseSBkYW5nZXJvdXMgdGFza3MuIFRoZW4gc29tZW9uZSBmcmFtZXMgSGFycnkgdG8gcGFydGljaXBhdGUgaW4gdGhlIHRvdXJuYW1lbnTigJR3aGljaCByZWFsbHkgbWVhbnMgc29tZW9uZSB3YW50cyBoaW0gZGVhZC4gSGFycnkgaXMgZ3VpZGVkIHRocm91Z2ggdGhlIGNvbXBldGl0aW9uIGJ5IFByb2Zlc3NvciBBbGFzdG9yIE1vb2R5LCB0aGlzIHllYXIncyBEZWZlbnNlIEFnYWluc3QgdGhlIERhcmsgQXJ0cyB0ZWFjaGVyLCBidXQgaGUgbXVzdCBhbHNvIGNvbnRlbmQgd2l0aCBhIG5hc3R5IHJlcG9ydGVyIG5hbWVkIFJpdGEgU2tlZXRlciwgd2hvIGRpZ3MgdXAgc29tZSBoaWdobHkgdW5mbGF0dGVyaW5nIHNlY3JldHMgYWJvdXQgSGFncmlkOyBhIHRlcnJpYmxlIGZpZ2h0IHdpdGggUm9uLCB3aG8gaXMgZGVlcGx5IGplYWxvdXMgb2YgSGFycnkncyBmYW1lOyBIZXJtaW9uZSdzIG5ld2ZvdW5kIGFjdGl2aXNtIG9uIGJlaGFsZiBvZiBob3VzZS1lbHZlczsgYW5kIHRoZSB0ZXJyaWZ5aW5nIHByb3NwZWN0IG9mIGFza2luZyBhIGRhdGUgdG8gdGhlIFl1bGUgQmFsbC4gV29yc3Qgb2YgYWxsLCBMb3JkIFZvbGRlbW9ydCBtYXkgZmluYWxseSBoYXZlIGdhdGhlcmVkIHRoZSBtYXRlcmlhbHMgbmVjZXNzYXJ5IGZvciBoaXMgcmVqdXZlbmF0aW9uLi4uIGFuZCBoZSBoYXMgYSBmYWl0aGZ1bCBzZXJ2YW50IGF0IEhvZ3dhcnRzIHdhaXRpbmcgb25seSBmb3IgYSBzaWduLiBObywgbm90aGluZyBpcyBldmVyIG5vcm1hbCBmb3IgSGFycnkgUG90dGVyLiBBbmQgaW4gaGlzIGNhc2UsIGRpZmZlcmVudCBjYW4gYmUgZGVhZGx5LiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgwNDM5MTM5NjAxIgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA0MzkxMzk2MDAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA3MzQsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJKdXZlbmlsZSBGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LjUsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDExOCwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS4xLjEuMC5wcmV2aWV3LjIiLAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9WXBCNUJnQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1ZcEI1QmdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1ZcEI1QmdBQVFCQUomZHE9aW50aXRsZTpIYXJyeStQb3R0ZXIrYW5kK3RoZStHb2JsZXQrb2YrRmlyZSUyQmluYXV0aG9yOkouSy4rUm93bGluZyZobD0mY2Q9NiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPVlwQjVCZ0FBUUJBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0hhcnJ5X1BvdHRlcl9hbmRfdGhlX0dvYmxldF9vZl9GaXJlX0Jvb2suaHRtbD9obD0maWQ9WXBCNUJnQUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJOT19QQUdFUyIsCiAgICAgICAgImVtYmVkZGFibGUiOiBmYWxzZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPVlwQjVCZ0FBUUJBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiSW4gSGFycnkgUG90dGVyIGFuZCB0aGUgR29ibGV0IG9mIEZpcmUsIEhhcnJ5IGlzIG1pZHdheSB0aHJvdWdoIGJvdGggaGlzIHRyYWluaW5nIGFzIGEgd2l6YXJkIGFuZCBoaXMgY29taW5nIG9mIGFnZS4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJmSTlFR3dBQUNBQUoiLAogICAgICAiZXRhZyI6ICJ4Mm5yc0NBZHRNZyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL2ZJOUVHd0FBQ0FBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJIYXJyeSBQb3R0ZXIgYW5kIHRoZSBHb2JsZXQgb2YgRmlyZSBieSBKLksuIFJvd2xpbmciLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkouIEsuIFJvd2xpbmciLAogICAgICAgICAgIkxpbmRhIFdhcmQgQmVlY2giCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlNjaG9sYXN0aWMgUHJvZmVzc2lvbmFsIEJvb2tzIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDAwIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiSXQgaXMgSGFycnkgcyBmb3VydGggeWVhciBhdCBIb2d3YXJ0cyBhbmQgdGhlcmUgYXJlIHNwZWxscyB0byBiZSBsZWFybnQsIHBvdGlvbnMgdG8gYmUgYnJld2VkIGFuZCBEaXZpbmF0aW9uIGxlc3NvbnMgdG8gYmUgYXR0ZW5kZWQuIEhhcnJ5IGlzIGV4cGVjdGluZyB0aGVzZTogaG93ZXZlciwgb3RoZXIgcXVpdGUgdW5leHBlY3RlZCBldmVudHMgYXJlIGFscmVhZHkgb24gdGhlIG1hcmNoIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA0MzkyMzE5NDkiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDQzOTIzMTk0NyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAxNiwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkVkdWNhdGlvbiIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPWZJOUVHd0FBQ0FBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9Zkk5RUd3QUFDQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9Zkk5RUd3QUFDQUFKJmRxPWludGl0bGU6SGFycnkrUG90dGVyK2FuZCt0aGUrR29ibGV0K29mK0ZpcmUlMkJpbmF1dGhvcjpKLksuK1Jvd2xpbmcmaGw9JmNkPTcmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1mSTlFR3dBQUNBQUomZHE9aW50aXRsZTpIYXJyeStQb3R0ZXIrYW5kK3RoZStHb2JsZXQrb2YrRmlyZSUyQmluYXV0aG9yOkouSy4rUm93bGluZyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9IYXJyeV9Qb3R0ZXJfYW5kX3RoZV9Hb2JsZXRfb2ZfRmlyZV9ieV9KLmh0bWw/aGw9JmlkPWZJOUVHd0FBQ0FBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiTk9fUEFHRVMiLAogICAgICAgICJlbWJlZGRhYmxlIjogZmFsc2UsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9Zkk5RUd3QUFDQUFKJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJOT05FIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJBdXRob3IgYmlvZ3JhcGh5LCBjaGFwdGVyIHN1bW1hcmllcywgZGlzY3Vzc2lvbiBxdWVzdGlvbnMsIHZvY2FidWxhcnkgYnVpbGRlcnMsIHJlcHJvZHVjaWJsZXMsIGNyb3NzLWN1cnJpY3VsYXIgYWN0aXZpdGllcyBmb3Igc3R1ZGVudHMgb2YgYWxsIGxlYXJuaW5nIHN0eWxlcyBmb3IgdGhlIG5vdmVsIEhhcnJ5IFBvdHRlciBhbmQgdGhlIGdvYmxldCBvZiBmaXJlIGJ5IEouSy4gUm93bGluZy4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJXTmR1QlFBQVFCQUoiLAogICAgICAiZXRhZyI6ICJMNzdVZm9Od21oUSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL1dOZHVCUUFBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJIYXJyeSBQb3R0ZXIgYW5kIHRoZSBHb2JsZXQgb2YgRmlyZSIsCiAgICAgICAgInN1YnRpdGxlIjogIiIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiUm93bGluZywgSi5LLiIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiUG90dGVybW9yZSIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAxNC0xMS0xOCIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkluIEhhcnJ5IFBvdHRlciBhbmQgdGhlIEdvYmxldCBvZiBGaXJlLCBIYXJyeSBpcyBtaWR3YXkgdGhyb3VnaCBib3RoIGhpcyB0cmFpbmluZyBhcyBhIHdpemFyZCBhbmQgaGlzIGNvbWluZyBvZiBhZ2UuIEhlIHdhbnRzIHRvIGdldCBhd2F5IGZyb20gdGhlIG1hbGljaW91cyBEdXJzbGV5cyBhbmQgZ28gdG8gdGhlIFF1aWRkaXRjaCBXb3JsZCBDdXAgd2l0aCBIZXJtaW9uZSwgUm9uLCBhbmQgdGhlIFdlYXNsZXlzLiBIZSB3YW50cyB0byBkcmVhbSBhYm91dCBoaXMgY3J1c2gsIENobyBDaGFuZyAoYW5kIG1heWJlIGRvIG1vcmUgdGhhbiBkcmVhbSkuIEFuZCBub3cgdGhhdCBoZeKAmXMgZ290dGVuIHRoZSBoYW5nIG9mIHRoaW5ncyBhdCBIb2d3YXJ0c+KAlGhlIGhvcGVz4oCUaGUganVzdCB3YW50cyB0byBiZSBhIG5vcm1hbCBmb3VydGVlbi15ZWFyLW9sZCB3aXphcmQuIEJ1dCBldmVuIGJ5IGhpcyBzdGFuZGFyZHMsIEhhcnJ5J3MgeWVhciBpcyBhbnl0aGluZyBidXQgbm9ybWFsLiBGaXJzdCBEdW1ibGVkb3JlIGFubm91bmNlcyB0aGUgcmV2aXZhbCBvZiBhIGdyYW5kIGNvbXBldGl0aW9uIHRoYXQgaGFzbid0IHRha2VuIHBsYWNlIGZvciBvbmUgaHVuZHJlZCB5ZWFyczogdGhlIFRyaXdpemFyZCBUb3VybmFtZW50LCB3aGVyZSBhIEhvZ3dhcnRzIGNoYW1waW9uIHdpbGwgY29tcGV0ZSBhZ2FpbnN0IHJpdmFscyBmcm9tIHR3byBvdGhlciBzY2hvb2xzIG9mIG1hZ2ljIGluIHRocmVlIGhpZ2hseSBkYW5nZXJvdXMgdGFza3MuIFRoZW4gc29tZW9uZSBmcmFtZXMgSGFycnkgdG8gcGFydGljaXBhdGUgaW4gdGhlIHRvdXJuYW1lbnTigJR3aGljaCByZWFsbHkgbWVhbnMgc29tZW9uZSB3YW50cyBoaW0gZGVhZC4gSGFycnkgaXMgZ3VpZGVkIHRocm91Z2ggdGhlIGNvbXBldGl0aW9uIGJ5IFByb2Zlc3NvciBBbGFzdG9yIE1vb2R5LCB0aGlzIHllYXIncyBEZWZlbnNlIEFnYWluc3QgdGhlIERhcmsgQXJ0cyB0ZWFjaGVyLCBidXQgaGUgbXVzdCBhbHNvIGNvbnRlbmQgd2l0aCBhIG5hc3R5IHJlcG9ydGVyIG5hbWVkIFJpdGEgU2tlZXRlciwgd2hvIGRpZ3MgdXAgc29tZSBoaWdobHkgdW5mbGF0dGVyaW5nIHNlY3JldHMgYWJvdXQgSGFncmlkOyBhIHRlcnJpYmxlIGZpZ2h0IHdpdGggUm9uLCB3aG8gaXMgZGVlcGx5IGplYWxvdXMgb2YgSGFycnkncyBmYW1lOyBIZXJtaW9uZSdzIG5ld2ZvdW5kIGFjdGl2aXNtIG9uIGJlaGFsZiBvZiBob3VzZS1lbHZlczsgYW5kIHRoZSB0ZXJyaWZ5aW5nIHByb3NwZWN0IG9mIGFza2luZyBhIGRhdGUgdG8gdGhlIFl1bGUgQmFsbC4gV29yc3Qgb2YgYWxsLCBMb3JkIFZvbGRlbW9ydCBtYXkgZmluYWxseSBoYXZlIGdhdGhlcmVkIHRoZSBtYXRlcmlhbHMgbmVjZXNzYXJ5IGZvciBoaXMgcmVqdXZlbmF0aW9uLi4uIGFuZCBoZSBoYXMgYSBmYWl0aGZ1bCBzZXJ2YW50IGF0IEhvZ3dhcnRzIHdhaXRpbmcgb25seSBmb3IgYSBzaWduLiBObywgbm90aGluZyBpcyBldmVyIG5vcm1hbCBmb3IgSGFycnkgUG90dGVyLiBBbmQgaW4gaGlzIGNhc2UsIGRpZmZlcmVudCBjYW4gYmUgZGVhZGx5LiIsCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkp1dmVuaWxlIEZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS4xLjEuMC5wcmV2aWV3LjIiLAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9V05kdUJRQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1XTmR1QlFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1XTmR1QlFBQVFCQUomZHE9aW50aXRsZTpIYXJyeStQb3R0ZXIrYW5kK3RoZStHb2JsZXQrb2YrRmlyZSUyQmluYXV0aG9yOkouSy4rUm93bGluZyZobD0mY2Q9OCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPVdOZHVCUUFBUUJBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0hhcnJ5X1BvdHRlcl9hbmRfdGhlX0dvYmxldF9vZl9GaXJlLmh0bWw/aGw9JmlkPVdOZHVCUUFBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiTk9fUEFHRVMiLAogICAgICAgICJlbWJlZGRhYmxlIjogZmFsc2UsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1XTmR1QlFBQVFCQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkluIEhhcnJ5IFBvdHRlciBhbmQgdGhlIEdvYmxldCBvZiBGaXJlLCBIYXJyeSBpcyBtaWR3YXkgdGhyb3VnaCBib3RoIGhpcyB0cmFpbmluZyBhcyBhIHdpemFyZCBhbmQgaGlzIGNvbWluZyBvZiBhZ2UuIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiTWNZWnpRRUFDQUFKIiwKICAgICAgImV0YWciOiAiMzFqT0VVVDlFYmsiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9NY1laelFFQUNBQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiSGFycnkgUG90dGVyIGFuZCB0aGUgR29ibGV0IG9mIEZpcmUgUHQgMSIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiSi4gSy4gUk9XTElORyIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDEiLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJPVEhFUiIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIk9DTEM6NjU0OTgzMDMwIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAicHJldmlldy0xLjAuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPU1jWVp6UUVBQ0FBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZjZD05JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9TWNZWnpRRUFDQUFKJmRxPWludGl0bGU6SGFycnkrUG90dGVyK2FuZCt0aGUrR29ibGV0K29mK0ZpcmUlMkJpbmF1dGhvcjpKLksuK1Jvd2xpbmcmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvSGFycnlfUG90dGVyX2FuZF90aGVfR29ibGV0X29mX0ZpcmVfUHRfMS5odG1sP2hsPSZpZD1NY1laelFFQUNBQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPU1jWVp6UUVBQ0FBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAickVia3lBRUFDQUFKIiwKICAgICAgImV0YWciOiAiNkpQaVVVeUF1RXMiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9yRWJreUFFQUNBQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiSGFycnkgUG90dGVyIGFuZCB0aGUgR29ibGV0IG9mIEZpcmUgLSBSYXZlbmNsYXcgRWRpdGlvbiIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiSi4gSy4gUm93bGluZyIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiQmxvb21zYnVyeSIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAyMC0wMS0yMyIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkxldCB0aGUgbWFnaWMgb2YgSi5LLiBSb3dsaW5nJ3MgY2xhc3NpYyBIYXJyeSBQb3R0ZXIgc2VyaWVzIHRha2UgeW91IGJhY2sgdG8gSG9nd2FydHMgU2Nob29sIG9mIFdpdGNoY3JhZnQgYW5kIFdpemFyZHJ5LiBUaGlzIFJhdmVuY2xhdyBIb3VzZSBFZGl0aW9uIG9mSGFycnkgUG90dGVyIGFuZCB0aGUgR29ibGV0IG9mIEZpcmUgY2VsZWJyYXRlcyB0aGUgbm9ibGUgY2hhcmFjdGVyIG9mIHRoZSBIb2d3YXJ0cyBob3VzZSBmYW1lZCBmb3IgaXRzIHdpdCwgbGVhcm5pbmcgYW5kIHdpc2RvbS4gSGFycnkncyBmb3VydGggeWVhciBhdCBIb2d3YXJ0cyBpcyBwYWNrZWQgd2l0aCBtb3JlIGdyZWF0IFJhdmVuY2xhdyBtb21lbnRzIGFuZCBjaGFyYWN0ZXJzLCBpbmNsdWRpbmcgdGhlIHJldHVybiBvZiBNb2FuaW5nIE15cnRsZSwgd2hvIC0gd2l0aCB0eXBpY2FsIFJhdmVuY2xhdyBpbnRlbGxpZ2VuY2UgLSBoZWxwcyBIYXJyeSBzb2x2ZSBhIGNydWNpYWwgY2x1ZSBpbiB0aGUgVHJpd2l6YXJkIFRvdXJuYW1lbnQuIEVhY2ggUmF2ZW5jbGF3IEhvdXNlIEVkaXRpb24gZmVhdHVyZXMgdmlicmFudCBzcHJheWVkIGVkZ2VzIGFuZCBpbnRyaWNhdGUgYnJvbnplIGZvaWxpbmcuIFRoZSBHb2JsZXQgb2YgRmlyZSBibGF6ZXMgYXQgdGhlIHZlcnkgY2VudHJlIG9mIHRoZSBmcm9udCBjb3ZlciwgZnJhbWVkIGJ5IHN0dW5uaW5nIGljb25vZ3JhcGh5IHRoYXQgZHJhd3Mgb24gdGhlbWVzIGFuZCBtb21lbnRzIGZyb20gSi5LLiBSb3dsaW5nJ3MgbXVjaC1sb3ZlZCBzdG9yeS4gSW4gYWRkaXRpb24gdG8gYSBiZXNwb2tlIGludHJvZHVjdGlvbiBhbmQgZXhjbHVzaXZlIGluc2lnaHRzIGludG8gdGhlIG1hZ2ljYWwgcGFpbnRpbmdzIG9mIEhvZ3dhcnRzLCB0aGUgYm9vayBhbHNvIGJvYXN0cyBuZXcgaWxsdXN0cmF0aW9ucyBieSBLYXRlIEdyZWVuYXdheSB3aW5uZXIgTGV2aSBQaW5mb2xkLCBpbmNsdWRpbmcgYSBzcGVjdGFjdWxhciBwb3J0cmFpdCBvZiBtYXN0ZXIgd2FuZC1tYWtlciwgT2xsaXZhbmRlci4gQWxsIHNldmVuIGJvb2tzIGluIHRoZSBzZXJpZXMgd2lsbCBiZSBpc3N1ZWQgaW4gdGhlc2UgaGlnaGx5IGNvbGxlY3RhYmxlLCBiZWF1dGlmdWxseSBjcmFmdGVkIEhvdXNlIEVkaXRpb25zLCBkZXNpZ25lZCB0byBiZSB0cmVhc3VyZWQgYW5kIHJlYWQgZm9yIHllYXJzIHRvIGNvbWUuIEEgbXVzdC1oYXZlIGZvciBhbnlvbmUgd2hvIGhhcyBldmVyIGltYWdpbmVkIHNpdHRpbmcgdW5kZXIgdGhlIFNvcnRpbmcgSGF0IGluIHRoZSBHcmVhdCBIYWxsIGF0IEhvZ3dhcnRzIHdhaXRpbmcgdG8gaGVhciB0aGUgd29yZHMsICdCZXR0ZXIgYmUgUkFWRU5DTEFXISciLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTUyNjYxMDMxMCIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxNTI2NjEwMzE3IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDYyNywKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkNoaWxkcmVuJ3Mgc3RvcmllcyIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1yRWJreUFFQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXJFYmt5QUVBQ0FBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPXJFYmt5QUVBQ0FBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZjZD0xMCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPXJFYmt5QUVBQ0FBSiZkcT1pbnRpdGxlOkhhcnJ5K1BvdHRlcithbmQrdGhlK0dvYmxldCtvZitGaXJlJTJCaW5hdXRob3I6Si5LLitSb3dsaW5nJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0hhcnJ5X1BvdHRlcl9hbmRfdGhlX0dvYmxldF9vZl9GaXJlX1JhdmUuaHRtbD9obD0maWQ9ckVia3lBRUFDQUFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJOT19QQUdFUyIsCiAgICAgICAgImVtYmVkZGFibGUiOiBmYWxzZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1yRWJreUFFQUNBQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkhhcnJ5IFBvdHRlciBqb2lucyB0aGUgV2Vhc2xleXMgYXQgdGhlIFF1aWRkaXRjaCBXb3JsZCBDdXAsIHRoZW4gZW50ZXJzIGhpcyBmb3VydGggeWVhciBhdCBIb2d3YXJ0cyBBY2FkZW15IHdoZXJlIGhlIGlzIG15c3RlcmlvdXNseSBlbnRlcmVkIGluIGFuIHVudXN1YWwgY29udGVzdCB0aGF0IGNoYWxsZW5nZXMgaGlzIHdpemFyZGluZyBza2lsbHMsIGZyaWVuZHNoaXBzIGFuZCBjaGFyYWN0ZXIsIGFtaWQgc2lnbnMgLi4uIgogICAgICB9CiAgICB9CiAgXQp9Cg==
  recorded_at: Sun, 18 Apr 2021 00:57:07 GMT
recorded_with: VCR 6.0.0
